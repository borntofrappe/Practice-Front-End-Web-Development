@import url('https://fonts.googleapis.com/css?family=Lato');

:root {
  /* define variables for the color and font used 
  and for the highlighter and eraser color, to be possibly updated at a later date */
  --font-color: #205;
  --background-color: #ededed;
  --theme-color: #205;
  --highlighter-color: rgb(160, 113, 230);
  --eraser-color: #ffffff;
  --font-main: 'Lato', sans-serif;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  min-height: 50vh;
  width: 100%;
  font-family: var(--font-main);
  background-color: var(--background-color);
  color: var(--font-color);
}

.container__toggle-settings {
  /* position the toggle button in the top left corner of the page */
  position: absolute;
  top: 1rem;
  left: 1.5rem;
  width: 52px;
  height: 52px;
  cursor: pointer;
  /* none to remove the defeault styles of a button */
  border: none;
  outline: none;
  background: none;
  /* zindex to have the button always on top of the settings panel which is transitioned right in its position */
  z-index: 10;
  /* transition for slight changes for hover and click animations */
  transition: transform 0.3s ease-out;
}
/* on hover and when clicked alter the button increasing its size */
.container__toggle-settings:hover {
  transform: scale(1.05);
}
.container__toggle-settings:active {
  transform: scale(1.1);
}

.container__settings {
  /* for the panel of options, position it out of view, to the left of the screen */
  position: absolute;
  top: 0;
  left: -20rem;
  /* padding to position the SVG assets below the toggle button  */
  padding: 5.5rem 1rem 0;
  /* flex to display the SVG assets in a single column layout */
  display: flex;
  flex-direction: column;
  justify-content: center;
  /* zindex to have the panel below the toggle button, but above the underlying text */
  z-index: 5;
  /* background color to have the panel visually stand on top of the possibly under-lapping text */
  background-color: var(--background-color);
  border-right: 2px solid var(--theme-color);
  border-bottom: 2px solid var(--theme-color);
  /* transition to smoothen the change in horizontal coorinate */
  transition: left 0.3s ease-out;
}
/* with a class of active, bring the panel of options into view */
.container__settings.active {
  left: 0;  
}
.container__settings svg {
  margin: 1rem 0;
  height: 80px;
  cursor: pointer;
  padding: 0.5rem;
  /* border initially not visible, applied only to the .active element */
  border: 2px solid transparent;
  border-radius: 1rem;
  /* transition to smoothen the change in border-color */
  transition: all 0.3s ease-out;
}
.container__settings svg.active {
  border-color: var(--theme-color);  
}

.container__settings input[type="color"] {
  /* for the input, as the svg icon ought to be the way with which it is possible to alter the color, display the input as a square on top of which the SVG asset is overlaid with a pseudo-element */
  border: none; 
  outline: none;
  width: 60px;
  height: 60px;
  cursor: pointer;
  position: relative;
  /* include a margin left to push the input visually centered in the panel */
  margin: 1rem 0 0 15px;
}
.container__settings input[type="color"]:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* beside the SVG, the solid hue of the background color allows to hide the underlying input  */
  background: 
    url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 26.458 26.458"><g transform="matrix(.52078 .11479 -.10934 .54674 -5.27 -39.92)" fill="#fff"><path d="M51.614 62.18a21.138 25.192 42.677 0 0-22.281 27.755A21.138 25.192 42.677 0 0 53.203 108a21.138 25.192 42.677 0 0 22.281-27.754 21.138 25.192 42.677 0 0-23.87-18.065zm1.049 6.017a3.464 3.464 0 0 1 4.102 2.679 3.464 3.464 0 0 1-2.678 4.102 3.464 3.464 0 0 1-4.103-2.678 3.464 3.464 0 0 1 2.679-4.103zm-9.166 5.717a3.464 3.464 0 0 1 4.102 2.68 3.464 3.464 0 0 1-2.679 4.101 3.464 3.464 0 0 1-4.102-2.678 3.464 3.464 0 0 1 2.679-4.103zm-5.932 9.084a3.464 3.464 0 0 1 4.102 2.679 3.464 3.464 0 0 1-2.678 4.102 3.464 3.464 0 0 1-4.103-2.679 3.464 3.464 0 0 1 2.68-4.102z" fill="#205"/><g transform="translate(2.664 .44)" fill="#205"><path d="M56.383 108.573c2.26-6.76 3.755-4.596 5.544-7.566 1.012-1.682 1.889-2.732-1.338-5.824-6.826-2.888-10.824 6.406-4.206 13.39z"/><rect transform="rotate(39.029)" ry="12.082" rx="12.082" y="13.788" x="103.84" height="15.87" width="6.279"/><rect transform="rotate(39.029)" width="6.279" height="9.362" x="103.84" y="20.296" rx="2.416" ry="2.416"/><rect transform="rotate(39.024) skewX(-.009)" ry="1.459" rx="2.416" y="29.723" x="103.838" height="5.652" width="6.279"/></g><path d="M57.793 109.277c2.26-6.76 3.755-4.597 5.544-7.567 1.012-1.681 1.889-2.732-1.338-5.823-6.826-2.888-10.824 6.406-4.206 13.39z"/><rect width="6.279" height="15.87" x="105.378" y="13.447" rx="12.082" ry="12.082" transform="rotate(39.029)"/><rect ry="2.416" rx="2.416" y="19.954" x="105.378" height="9.362" width="6.279" transform="rotate(39.029)"/><rect width="6.279" height="5.652" x="105.376" y="29.382" rx="2.416" ry="1.459" transform="rotate(39.024) skewX(-.009)"/></g></svg>'), 
    var(--background-color);
  background-size: contain;  
}

.container__settings svg.copy-text {
  /* include a padding as the last svg asset slightly differs from the first two  */
  padding-left: 15px;
}
.container__settings svg.copy-text:active {
  /* include a small transition whenever the SVG asset is clicked (rough way to visually confirm the click) */
  transform: scale(1.2);
}

.container__text {
  /* for the text, center the div in the page and give it a max width */
  max-width: 700px;
  margin: 2rem auto;
  padding: 2rem 1.5rem;
  border-right: 2px solid var(--theme-color);
}
.container__text h1 {
  text-align: right;
  padding: 1rem;
  text-transform: uppercase;
}
.container__text p {
  line-height: 2.5;
  font-size: 1.4rem;
}


/* define here the style of the ins and del elements, styling how the text is displayed when it is highlighted and erased respectively */
/* for both elements 1) remove the text-decoration and 1) set position relative to benefit from the absolute positioning of pseudo-elements */
ins, del {
  text-decoration: none;
  position: relative;
}

ins:before, del:before {
content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: skewX(-5deg);
}
/* for the highlight style, include a background below the text of a chosen color */
ins:before {
  z-index: -5;
  background-color: var(--highlighter-color);
  opacity: 0.8;
}
/* for the erase style, include a background on top of the text */
del:before {
  background-color: var(--eraser-color);
}


/* on small screen sizes simply remove the border-right applied on the text container */
@media only screen and (max-width: 700px) {
  .container__text {
    border-right: none;
  }
}
