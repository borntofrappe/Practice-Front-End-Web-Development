/* import font(s) */
@import url("https://fonts.googleapis.com/css?family=Special+Elite");

/* root variables */
:root {
  --text: #4e4e4e;
  --font: "Special Elite", cursive;

  --bg: #cfc3b7;

  --map: #4b3640;
  --goal: #d13b3a;
  --trail: #180a22;

  --compass: #e67c54;
  --compass-bg: #e4ddd6;
  --needle-north: #d95b4d;
  --needle-south: #868686;
  /* stroke-dashoffset is used for the value ultimately picked up by path#walk
  ! the variable is updated in the script to match the length of the path
  */
  --stroke-dashoffset: 0;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  width: 100%;
  font-family: var(--font);
  color: var(--text);
  background: var(--bg);
}
/* have the map stretch to cover a sizeable portion of the width of the screen */
.map {
  max-width: 1000px;
  width: 90vw;
  height: 90vh;
  max-height: calc(90vh / 90vw * 1000px);
  margin: 75px auto 1rem;
  background: var(--map);
  border-radius: 10px;
  box-shadow: 0 0 15px -5px var(--map), 0 2px 5px var(--map);
  /* position relative to have the div.compass be absolute positioned with respect to this container */
  position: relative;
}

/* include the compass as a circle */
.compass {
  width: 125px;
  height: 125px;
  border-radius: 50%;
  background: var(--compass-bg);
  box-shadow: 0 0 0 0.5rem var(--compass);
  /* move the compass in the top left corner of the map */
  transform: translate(-50%, -50%) rotate(-12deg);
  /* position relative to absolute position the needle in the center of the comapss */
  position: absolute;
  /* transparent border to have the cardinal points slightly pushed inwards */
  border: 5px solid transparent;
}
/* include the needle in the center of the compass, using the clip-path property to fake the appearance of the desired shape */
.compass .needle {
  position: absolute;
  top: 50%;
  left: 50%;
  height: 80%;
  width: 8%;
  background: linear-gradient(
    to bottom,
    var(--needle-north) 50%,
    var(--needle-south) 50%
  );
  transform: translate(-50%, -50%);
  clip-path: polygon(0% 50%, 50% 0%, 100% 50%, 50% 100%);
}

/* with a pseudo element include a dot as if fixing the needle in place */
.compass .needle:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 7.5px;
  height: 7.5px;
  background: var(--text);
  border-radius: 50%;
}

/* absolute position the cardinal points included in the compass */
.compass .direction {
  text-transform: uppercase;
  color: var(--text);
  position: absolute;
}
.compass .direction[data-direction="n"] {
  color: var(--needle-north);
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}
.compass .direction[data-direction="e"] {
  top: 50%;
  right: 0;
  transform: translate(-50%, -50%);
}
.compass .direction[data-direction="s"] {
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
}
.compass .direction[data-direction="w"] {
  top: 50%;
  left: 0;
  transform: translate(50%, -50%);
}

/* stretch the svg to cover the space provided by the container */
svg {
  width: 100%;
  height: 100%;
  border-radius: inherit;
}

/* style each path element with the color picked up by the stroke property */
svg path.x {
  color: var(--goal);
}

svg path#trail {
  color: var(--trail);
  /* have the trail segmented in smaller chunks */
  stroke-dasharray: 8px;
}
svg path#walk {
  /* use the same color of the background to effectively hide the trail */
  color: var(--map);
}

/* animation drawing the X defined by the path.x elements */
@keyframes strikeGoal {
  to {
    stroke-dashoffset: 0;
  }
}

/* animation removing the overlay provided in path#walk */
@keyframes goToGoal {
  to {
    stroke-dashoffset: var(--stroke-dashoffset);
  }
}
