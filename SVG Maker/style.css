@import url("https://fonts.googleapis.com/css?family=Open+Sans");

/* global variables
- dark
- darker
- light
- accent (also used for the color of the SVG elements)
*/
:root {
  --dark: #1f1f32;
  --darker: #0e0e18;
  --light: #fefefe;
  --accent: #8be8dd;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  width: 100%;
  min-height: 100vh;
  color: var(--light);
  background: var(--dark);
  font-family: "Open Sans", sans-serif;
}

/* grid structure
main | tools
globals | currently empty
*/
main.maker {
  display: grid;
  justify-content: center;
  grid-gap: 2rem 1rem;
  margin: 1rem 0;
  grid-template-areas: "canvas tools" "globals .";
}

/* size the SVG canvas as a square */
svg.maker__canvas {
  grid-area: canvas;
  width: 500px;
  height: 500px;
  box-shadow: 0px 1px 10px var(--darker);
  background: var(--light);
  cursor: crosshair;
}
/* remove event listeners on all elements nested in the SVG (for now) */
svg.maker__canvas * {
  pointer-events: none;
}

/* properties applied on all button elements (later differences are included for the size and other specifics for the tools/globals container) */
button {
  background: none;
  border-radius: 4px;
  color: var(--light);
  border: 2px solid currentColor;
  /* position relative to absolute position the pseudo element */
  position: relative;
  transition: all 0.2s ease-out;
  font-family: inherit;
}
/* by changing the color, so changes the border (as per current color) */
button:hover {
  color: var(--accent);
}
/* apply the accent color also when the button has a specific class (added to the tools buttons in the script) */
button.active {
  color: var(--accent);
}
/* through a pseudo element add a simple label
! the label is positioned in the bottom right for the tools bottom, in the top right for the globals button
*/
button:after {
  text-transform: capitalize;
  position: absolute;
  background: var(--dark);
  color: var(--accent);
  padding: 2px 4px;
  box-shadow: 2px 2px var(--accent);
  pointer-events: none;
  /* hide the labels by default, show them on hover */
  visibility: hidden;
  opacity: 0;
  transition: all 0.2s ease-out;
}
button:hover:after {
  visibility: visible;
  opacity: 1;
}
button svg {
  width: 100%;
  height: 100%;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

/* display the tools in a single column */
div.maker__tools {
  grid-area: tools;
  display: flex;
  flex-direction: column;
  height: 500px;
  /* perspective for the slight transform property included on the pseudo elements of the buttons */
  perspective: 700px;
}

/* buttons in the tools panel */
div.maker__tools button {
  flex-shrink: 0;
  margin: 1rem 0.5rem;
  width: 82px;
  height: 82px;
}
/* label in the bottom right */
div.maker__tools button:after {
  content: attr(data-tool);
  bottom: 8px;
  right: 8px;
  transform-origin: 100% 50%;
  transform: translateX(0.3rem) rotateY(90deg);
}
div.maker__tools button:hover:after {
  transform: translateX(0) rotateY(0deg);
}

/* display the buttons in a single row */
div.maker__globals {
  display: flex;
  margin-top: 1rem;
}

/* buttons in the globals panel */
div.maker__globals button {
  width: 42px;
  height: 42px;
  flex-shrink: 0;
  margin: 0.5rem 1rem;
}

/* show the label in the top right corner */
div.maker__globals button:after {
  font-size: 0.6rem;
  content: attr(data-global);
  top: 0;
  left: 100%;
  transform: translate(-50%, -50%) rotate(0deg);
}
div.maker__globals button:hover:after {
  transform: translate(-50%, -50%) rotate(45deg);
}

/* replicate the same properties for the globals button for the div including the input of type coor */
div.maker__globals div[data-global="color"] {
  width: 42px;
  height: 42px;
  border-radius: 4px;
  color: var(--light);
  border: 2px solid currentColor;
  transition: all 0.2s ease-out;
  margin: 0.5rem 1rem;
  position: relative;
}

div.maker__globals div[data-global="color"]:after {
  font-size: 0.6rem;
  content: attr(data-global);
  top: 0;
  left: 100%;
  transform: translate(-50%, -50%) rotate(0deg);
  text-transform: capitalize;
  position: absolute;
  background: var(--dark);
  color: var(--accent);
  padding: 2px 4px;
  box-shadow: 2px 2px var(--accent);
  pointer-events: none;

  /* hide the labels by default, show them on hover */
  visibility: hidden;
  opacity: 0;
  transition: all 0.2s ease-out;
}
div.maker__globals div[data-global="color"]:hover {
  color: var(--accent);
}
div.maker__globals div[data-global="color"]:hover:after {
  visibility: visible;
  opacity: 1;
  transform: translate(-50%, -50%) rotate(45deg);
}

/* absolute position the input of type color to stretch over the entire div (this way the click on the div registers as a click on the input) */
div.maker__globals div[data-global="color"] input[type="color"] {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
}
/* resize the SVG to match the SVG included in the buttons */
div.maker__globals div[data-global="color"] svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
}
