@import url("https://fonts.googleapis.com/css?family=Nova+Mono|Open+Sans");

/* 
define variables used in the project 
a pair of colors are chosen for each theme, and swapped in javascript 
*/
:root {
  --color-bg-dark: #4d1894;
  --color-bg-darker: #21046c;
  --color-bg-light: #5181db;
  --color-bg-lighter: #71a0f6;

  --font-header: "Nova Mono", monospace;
  --font-text: "Open Sans", sans-serif;
  --color-text: #fff;
  --color-card: var(--color-text);
  --color-bg-start: var(--color-bg-dark);
  --color-bg-end: var(--color-bg-darker);
}
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
body {
  width: 100%;
  min-height: 100vh;
  font-family: var(--font-text);
  color: var(--color-text);
  background: linear-gradient(var(--color-bg-start), var(--color-bg-end));
}

/*  display the main and section elements side by side */
.app {
  display: flex;
  justify-content: space-around;
  min-height: 100vh;
}

/* absolute position the button in the top right corner */
.app__theme {
  position: absolute;
  top: 1rem;
  right: 1rem;
  width: 62px;
  height: 62px;
  border-radius: 50%;
  /* remove default styling */
  background: none;
  border: none;
  /* avoid overflow then the svg is rotated */
  overflow: hidden;
}
.app__theme svg {
  width: 100%;
  height: 100%;
  /* rotate the svg slightly */
  opacity: 0.7;
  transition: all 0.2s ease-out;
  transform: rotate(-35deg);
}
/* on hover slightly scale the svg up */
.app__theme:hover svg {
  opacity: 1;
  transform: scale(1.1) rotate(-35deg);
}
/* when active rotate the svg */
.app__theme:active svg {
  opacity: 1;
  transform: scale(1.2) rotate(225deg);
}

/* display the header/textarea/button on top of one another */
.app__share {
  display: flex;
  flex-direction: column;
  /* center in the page */
  align-items: center;
  justify-content: center;
}

.app__share h1 {
  font-family: var(--font-header);
  font-weight: 300;
  font-size: 2.5rem;
  text-align: center;
}

/* prominently display the textarea as a panel where the user types the tweet to-be-shared */
.app__share textarea {
  max-width: 400px;
  width: 90vw;
  min-height: 200px;
  margin: 2.5rem 0 1.5rem;
  padding: 1rem;
  background: var(--color-card);
  border-radius: 4px;
  border: none;
  box-shadow: 0 1px 5px var(--color-card);

  color: var(--color-bg-end);
  font-family: inherit;
  font-size: 1.2rem;
}
.app__share textarea::placeholder {
  opacity: 0.8;
}

.app__share button {
  border: none;
  background: none;
  width: 52px;
  height: 52px;
  border-radius: 50%;
  /* color to alter the fill of the svg according to the color of the parent button */
  color: var(--color-card);
  /* transition for the hover and active states */
  transition: all 0.25s ease-out;
}
/* on hover swap the color and background value, elevating the button */
.app__share button:hover {
  transform: translateY(-0.4rem);
  color: var(--color-bg-end);
  background: var(--color-card);
}
/* when active slightly scale the button up */
.app__share button:active {
  transform: scale(1.1) translateY(-0.4rem);
}
.app__share button svg {
  width: 100%;
  height: 100%;
  /* current color allows to change the color of the button and have the modification cascade to the svg itself */
  fill: currentColor;
}

/* lay the buttons one on top of the other */
.app__tags {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

/* style the buttons similarly to the tweet button */
.app__tags button {
  background: var(--color-card);
  border: none;
  padding: 1rem 0.5rem;
  border-radius: 4px;
  box-shadow: 0 1px 5px var(--color-card);
  font-family: inherit;
  font-weight: bold;
  color: var(--color-bg-start);
  /* transition for the hover and active states */
  transition: all 0.2s ease-out;
}
/* 
on hover swap the color and background values 
increase also the white area given by the drop shadow
*/
.app__tags button:hover {
  color: var(--color-card);
  background: var(--color-bg-start);
  box-shadow: 0 2px 5px 2px var(--color-card);
}
/* 
when active slightly scale the button down and move it slightlyy downward, to emulate a physical press
reduce the drop shadow to support the action
*/
.app__tags button:active {
  transform-origin: bottom center;
  transform: scaleY(0.98) translateY(2px);
  box-shadow: 0 2px 5px var(--color-card);
}

/*
on smaller viewports
- display the main and section elements on top of one another
- detail the buttons responsible for the tags in a wrapping row
- slightly modify the same buttons to accommodate the change in width
*/
@media (max-width: 600px) {
  .app {
    flex-direction: column;
    align-items: center;
  }
  .app__tags {
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
  }
  .app__tags button {
    margin: 0.8rem;
    padding: 0.5rem 1rem;
  }
}
