@import url("https://fonts.googleapis.com/css?family=Lato");
/* define variables for the three colors used and the one font-family */
/* create statements to be extended to any unordered list that should not have bullet points and any anchor link that should not have default styling */
.navigation-bar li {
  list-style: none;
}

.navigation-bar li a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  width: 100%;
  color: #f6f7f8;
  font-family: "Lato", sans-serif;
}

/* display flex to stretch the navigation-bar horizontally */
.navigation-bar {
  display: flex;
  width: 100%;
  padding: 1rem;
  font-size: 1.1rem;
  background-color: #2c2e31;
}
.navigation-bar li {
  margin: 0 1rem;
  text-transform: uppercase;
  /* flex grow on the empty list items to create space and groups among the visible items */
}
.navigation-bar li:nth-child(2) {
  flex-grow: 1;
}
.navigation-bar li:nth-child(6) {
  flex-grow: 1;
}
.navigation-bar li a {
  /* position relative to benefit from absolute positioning in the following pseudo-element */
  position: relative;
  /* as the visitor hovers on the anchor links, create an underline positioned in an upward motion */
}
.navigation-bar li a:before {
  content: "";
  position: absolute;
  left: 0;
  width: 100%;
  background-color: #f6e770;
  height: 0;
  bottom: -1.5rem;
  opacity: 0;
  transition: all 0.2s cubic-bezier(0.18, 0.67, 0.7, 1.32);
}
.navigation-bar li a:hover:before {
  height: 2px;
  bottom: -2px;
  opacity: 1;
}

.section {
  min-height: 100vh;
}

.hero, .two {
  background-color: #2c2e31;
}

.one {
  background-color: #f6f7f8;
  color: #2c2e31;
}

.hero {
  /* position relative to benefit from absolute positioning for the nested .dark-overlay div */
  position: relative;
  /* display grid to create a two columns layout, of items centered horizontally and vertically in their column and row  */
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
  justify-items: center;
  align-items: center;
  padding: 1rem 0.4rem;
  /* close .description*/
}
.hero .description {
  /* close button*/
}
.hero .description h1 {
  text-transform: uppercase;
  font-weight: 300;
}
.hero .description h2 {
  margin: 1rem 0;
  font-weight: 300;
}
.hero .description button {
  text-transform: uppercase;
  background-color: #f6e770;
  color: rgba(44, 46, 49, 0.7);
  padding: 0.7rem 1.2rem;
  margin: 2rem 0.2rem;
  font-size: 1.1rem;
  border: none;
  border-radius: 0.3rem;
  cursor: pointer;
  transition: all 0.25s cubic-bezier(0.4, 0.25, 0.3, 1);
  /* close button:hover*/
}
.hero .description button:hover {
  color: rgba(44, 46, 49, 0.85);
  background-color: rgba(246, 231, 112, 0.85);
}
.hero .image {
  /* max width on the image container, as to stretch the image at most up to this size */
  max-width: 500px;
  /* position relative to absolute position the nested paragraph */
  position: relative;
}
.hero .image img {
  width: 100%;
}
.hero .image p {
  display: inline-block;
  position: absolute;
  bottom: 1rem;
  left: 1rem;
  font-size: 1.3rem;
  font-weight: 500;
  background-color: rgba(44, 46, 49, 0.5);
  padding: 0.2rem 1rem;
}

/* flex used for both sections to align nested structures to be laid vertically and centered horizontally */
.one, .two {
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
  font-size: 1.6rem;
  line-height: 1.7;
}

/*
for smaller screen sizes
*/
@media only screen and (max-width: 800px) {
  /*
  center navigation-bar items and remove all, but the most pertinent one
  */
  .navigation-bar {
    font-size: 1rem;
    justify-content: center;
    /* close li */
  }
  .navigation-bar li {
    display: none;
    /* close li:first-child */
  }
  .navigation-bar li:first-child {
    display: inline-block;
  }

  /* close navigation-bar */
  /*
  change grid structure to lay two items vertically, each on a separate row
  */
  .hero {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
  }
}
/* style for the div used to overlay a dark surface on the hero section

positioned on the top left corner of the parent container (.hero), spanning its entire width and height, with a dark background-color and initial opacity of 0 (this is altered in JS)

pointer-events set to none as to avoid the div from preventing access to the .hero section

*/
.dark-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: black;
  opacity: 0;
  pointer-events: none;
}
